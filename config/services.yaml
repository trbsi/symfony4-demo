# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    # This parameter defines the codes of the locales (languages) enabled in the application
    app_locales: en|fr|de|es|cs|nl|ru|uk|ro|pt_BR|pl|it|ja|id|ca|sl|hr|zh_CN
    app.notifications.email_sender: anonymous@example.com

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false
        # defines the scalar arguments once and apply them to any service defined/created in this file
        bind:
            $locales: '%app_locales%'
            $defaultLocale: '%locale%'
            $emailSender: '%app.notifications.email_sender%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../src/{Entity,Migrations,Tests}'

    # when the service definition only contains arguments, you can omit the
    # 'arguments' key and define the arguments just below the service class
    App\EventSubscriber\CommentNotificationSubscriber:
        $sender: '%app.notifications.email_sender%'

    App\CommentListener:
        tags:
            - { name: kernel.event_listener, event: comment.created, method: onCommentCreated }

    Cron\CronBundle\Command\CronCreateCommand:
        tags:
            - { name: 'console.command', command: 'cron:create' }
    Cron\CronBundle\Command\CronDeleteCommand:
        tags:
            - { name: 'console.command', command: 'cron:delete' }
    Cron\CronBundle\Command\CronDisableCommand:
        tags:
            - { name: 'console.command', command: 'cron:disable' }
    Cron\CronBundle\Command\CronEnableCommand:
        tags:
            - { name: 'console.command', command: 'cron:enable' }
    Cron\CronBundle\Command\CronListCommand:
        tags:
            - { name: 'console.command', command: 'cron:list' }
    Cron\CronBundle\Command\CronRunCommand:
        tags:
            - { name: 'console.command', command: 'cron:run' }
    Cron\CronBundle\Command\CronStartCommand:
        tags:
            - { name: 'console.command', command: 'cron:start' }
    Cron\CronBundle\Command\CronStopCommand:
        tags:
            - { name: 'console.command', command: 'cron:stop' }